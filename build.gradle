buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        google()
    }
    dependencies {
        // Include any necessary build dependencies here
    }
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "Wizardo"
        gdxVersion = '1.12.1'
        roboVMVersion = '2.3.20'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            sourceCompatibility = '22'
            targetCompatibility = '22'
        }
    }
}

project(":desktop") {
    apply plugin: "java-library"

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx-controllers:gdx-controllers-desktop:$gdxControllersVersion"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
    }

    tasks.register('Jar', Jar) {
        group = "build"
        description = "Assembles a JAR file containing all dependencies for LWJGL3."

        manifest {
            attributes 'Main-Class': 'wizardo.game.DesktopLauncher'
        }

        // Include compiled classes and resources
        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }

        // Exclude duplicates to prevent issues with resources
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE

        // Ensure native libraries (e.g. .dll, .so, .dylib) are included
        from {
            configurations.runtimeClasspath.filter { it.name.contains('natives-desktop') }
                    .collect { zipTree(it) }
        }

        // Make sure the project jars are included
        with jar
    }
}

project(":core") {
    apply plugin: "java-library"

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        api "com.badlogicgames.gdx-controllers:gdx-controllers-core:$gdxControllersVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        api "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
        api "com.kotcrab.vis:vis-ui:1.4.11"
        api "com.github.tommyettinger:jbump:1.0.1"
    }
}
